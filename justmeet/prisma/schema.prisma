generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(cuid())
  email     String      @unique
  name      String?
  wallet    Wallet?
  sessions  Session[]
  orders    Order[]
  listings  Listing[]
  payments  Payment[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Wallet {
  id           String            @id @default(cuid())
  balance      Int               @default(0)
  user         User              @relation(fields: [userId], references: [id])
  userId       String            @unique
  transactions CoinTransaction[]
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
}

model CoinTransaction {
  id        String   @id @default(cuid())
  wallet    Wallet   @relation(fields: [walletId], references: [id])
  walletId  String
  amount    Int
  createdAt DateTime @default(now())
}

model Listing {
  id         String    @id @default(cuid())
  user       User      @relation(fields: [userId], references: [id])
  userId     String
  coinPack   CoinPack? @relation(fields: [coinPackId], references: [id])
  coinPackId String?
  price      Int
  orders     Order[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model CoinPack {
  id        String    @id @default(cuid())
  name      String
  coins     Int
  price     Int
  listings  Listing[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Payment {
  id        String   @id @default(cuid())
  amount    Int
  order     Order?   @relation(fields: [orderId], references: [id])
  orderId   String?  @unique
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  createdAt DateTime @default(now())
}

model Order {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  listing   Listing  @relation(fields: [listingId], references: [id])
  listingId String
  payment   Payment?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Session {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
}
